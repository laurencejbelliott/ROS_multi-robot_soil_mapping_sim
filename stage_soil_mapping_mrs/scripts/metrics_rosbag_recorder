#!/usr/bin/python3
import rosbag
import rospy
from std_msgs.msg import Float32, Bool

def stop_recording(msg):
    if msg.data:
        rospy.loginfo("Stopping metrics rosbag recorder")
        bag.close()
        rospy.signal_shutdown("Metrics rosbag recorder stopped")

# Record metrics to bag file until the coordinator node is killed
if __name__ == "__main__":
    rospy.init_node("metrics_rosbag_recorder", anonymous=True)

    rospy.loginfo("Starting metrics rosbag recorder")
    
    # Stop recording when the coordinator node is killed (sampling is completed)
    rospy.Subscriber("/sampling_time_budget_elapsed", Bool, stop_recording)


    bag = rosbag.Bag('metrics.bag', 'w')

    topics = rospy.get_published_topics()
    robots = []
    for topic in topics:
        if topic[0].startswith("/robot_"):
            robots.append(topic[0].split("/")[1])

    robots = list(set(robots))

    try:
        # Record metrics topics for each robot
        for robot in robots:
            bag.write('/' + robot + '/metrics/mean_task_completion_time', Float32(0.0))
            bag.write('/' + robot + '/metrics/total_distance', Float32(0.0))
            bag.write('/' + robot + '/metrics/total_idle_time', Float32(0.0))
    finally:
        bag.close()

    rospy.spin()